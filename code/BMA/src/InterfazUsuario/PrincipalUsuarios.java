/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazUsuario;

import GestionDeAlumnos.GestorAlumnos;
import GestionDeUsuarios.GestorUsuarios;
import ServiciosAlmacenamiento.BaseDatos;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Dell
 */
public class PrincipalUsuarios extends javax.swing.JFrame {

    private JFrame pP;
    private BaseDatos accesoBD;
    private ResultSet ultimaActualizacionUsuario;
    private String ultimaConsultaUsuario;
    private String consultaUsuariosMostrados;
    private ResultSet retset;

    /**
     * Creates new form PrincipalUsiarios
     */
    public PrincipalUsuarios(JFrame pP, BaseDatos bd) {
        initComponents();
        this.pP = pP;
        this.accesoBD = bd;

        ResultSet consulta;

        try {
            consulta = accesoBD.ejecutaConsulta("SELECT * FROM grupo");
            consultaGrupoUsuario.setModel(new javax.swing.DefaultComboBoxModel(new String[]{""}));
            while (consulta.next()) {
                consultaGrupoUsuario.addItem(consulta.getInt(1));
            }
            consulta = accesoBD.ejecutaConsulta("SELECT * FROM equipo");
            consultaEquipoUsuario.setModel(new javax.swing.DefaultComboBoxModel(new String[]{""}));
            while (consulta.next()) {
                consultaEquipoUsuario.addItem(consulta.getInt(1));
            }
            consulta = accesoBD.ejecutaConsulta("SELECT * FROM categoria");
            consultaCategoriaUsuario.setModel(new javax.swing.DefaultComboBoxModel(new String[]{""}));
            while (consulta.next()) {
                consultaCategoriaUsuario.addItem(consulta.getString("tipo"));
            }
            consulta = accesoBD.ejecutaConsulta("SELECT * FROM temporada");
            consultaTemporadaUsuario.setModel(new javax.swing.DefaultComboBoxModel(new String[]{""}));
            while (consulta.next()) {
                consultaTemporadaUsuario.addItem(consulta.getString("curso"));
            }
        } catch (SQLException ex) {
            System.out.print(ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelUsuarios = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        botonNuevoUsuario = new javax.swing.JButton();
        botonGuardarCambiosUsuario = new javax.swing.JButton();
        deshacerCambiosUsuario = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        textfield_nombreUsuario = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        boton_mostrar_Usuarios = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        textfield_apellidoSegundoUsuario = new javax.swing.JTextField();
        textfield_apellidoPrimeroUsuario = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        consultaEquipoUsuario = new javax.swing.JComboBox();
        consultaGrupoUsuario = new javax.swing.JComboBox();
        consultaCategoriaUsuario = new javax.swing.JComboBox();
        consultaTemporadaUsuario = new javax.swing.JComboBox();
        errorModifMovilUsuario = new javax.swing.JLabel();
        errorModifFijoUsuario = new javax.swing.JLabel();
        consultaEntrenadorUsuario = new javax.swing.JComboBox();
        botonEliminarUsuario = new javax.swing.JButton();
        errorEliminarUsuario = new javax.swing.JLabel();
        verEstadisticasEntrenador = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelUsuarios.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setText("Resultados de los Usuarios:");
        panelUsuarios.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, 20));

        botonNuevoUsuario.setText("Nuevo Usuario");
        botonNuevoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevoUsuarioActionPerformed(evt);
            }
        });
        panelUsuarios.add(botonNuevoUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, -1, -1));

        botonGuardarCambiosUsuario.setText("Guardar Cambios");
        botonGuardarCambiosUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarCambiosUsuarioActionPerformed(evt);
            }
        });
        panelUsuarios.add(botonGuardarCambiosUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 610, -1, -1));

        deshacerCambiosUsuario.setText("Deshacer Cambios");
        deshacerCambiosUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deshacerCambiosUsuarioActionPerformed(evt);
            }
        });
        panelUsuarios.add(deshacerCambiosUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 610, -1, -1));

        jLabel19.setText("Buscar Usuarios por:");
        panelUsuarios.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 36, -1, -1));

        jLabel20.setText("Equipo");
        panelUsuarios.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, -1, -1));

        jLabel33.setText("Grupo");
        panelUsuarios.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, -1, -1));

        jLabel34.setText("Tipo Usuario");
        panelUsuarios.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 40, -1, -1));

        jLabel36.setText("Nombre");
        panelUsuarios.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 36, -1, -1));
        panelUsuarios.add(textfield_nombreUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 201, -1));

        jScrollPane2.setAutoscrolls(true);

        tablaUsuarios.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaUsuarios.getTableHeader().setResizingAllowed(false);
        tablaUsuarios.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tablaUsuarios);

        panelUsuarios.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 1260, 350));

        boton_mostrar_Usuarios.setText("Mostrar Usuarios");
        boton_mostrar_Usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_mostrar_UsuariosActionPerformed(evt);
            }
        });
        panelUsuarios.add(boton_mostrar_Usuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, -1, -1));

        jLabel37.setText("Categoria");
        panelUsuarios.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, -1, -1));
        panelUsuarios.add(textfield_apellidoSegundoUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 60, 201, -1));
        panelUsuarios.add(textfield_apellidoPrimeroUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 201, -1));

        jLabel38.setText("Apellido Primero");
        panelUsuarios.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, -1, -1));

        jLabel39.setText("Apellido Segundo");
        panelUsuarios.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 40, -1, -1));

        jLabel40.setText("Temporada");
        panelUsuarios.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, -1, -1));

        consultaEquipoUsuario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        panelUsuarios.add(consultaEquipoUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 100, -1));

        consultaGrupoUsuario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        panelUsuarios.add(consultaGrupoUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, 100, -1));

        consultaCategoriaUsuario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        panelUsuarios.add(consultaCategoriaUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, 100, -1));

        panelUsuarios.add(consultaTemporadaUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 100, -1));

        errorModifMovilUsuario.setForeground(new java.awt.Color(255, 0, 51));
        errorModifMovilUsuario.setText("Error Tel.Movil");
        errorModifMovilUsuario.setVisible(false);
        panelUsuarios.add(errorModifMovilUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 210, -1, -1));

        errorModifFijoUsuario.setForeground(new java.awt.Color(255, 0, 51));
        errorModifFijoUsuario.setText("Error Tel.Fijo");
        errorModifFijoUsuario.setVisible(false);
        panelUsuarios.add(errorModifFijoUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 210, -1, -1));

        consultaEntrenadorUsuario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Entrenador", "Administrador" }));
        panelUsuarios.add(consultaEntrenadorUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 60, -1, -1));

        botonEliminarUsuario.setText("Eliminar Usuario");
        botonEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarUsuarioActionPerformed(evt);
            }
        });
        panelUsuarios.add(botonEliminarUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 610, -1, -1));

        errorEliminarUsuario.setForeground(new java.awt.Color(255, 0, 102));
        errorEliminarUsuario.setText("No ha seleccionado ningún usuario para ser eliminado");
        panelUsuarios.add(errorEliminarUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 610, -1, -1));
        errorEliminarUsuario.setVisible(false);

        verEstadisticasEntrenador.setText("Estadisticas");
        verEstadisticasEntrenador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verEstadisticasEntrenadorActionPerformed(evt);
            }
        });
        panelUsuarios.add(verEstadisticasEntrenador, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, 100, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1346, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 1326, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 667, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonNuevoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevoUsuarioActionPerformed
        new AltaUsuario(accesoBD).setVisible(true);
    }//GEN-LAST:event_botonNuevoUsuarioActionPerformed

    private void botonGuardarCambiosUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarCambiosUsuarioActionPerformed
        ResultSet retsetMostrados;
        //compruebo si se ha mostrado algún resultado antes de guardar los cambios, ya que si no se han mostrado no se ha podido modificar nada
        if (tablaUsuarios.getValueAt(0, 0) == null) {
            return;
        }
        try {
            String consultaUsuario = leeConsultaUsuariosInterfaz();
            retsetMostrados = GestorUsuarios.consultarUsuario(accesoBD, consultaUsuario);
            ultimaActualizacionUsuario = GestorUsuarios.consultarUsuario(accesoBD, consultaUsuario);
            ultimaConsultaUsuario = consultaUsuario;
            int i = 0;
            String updateFila;
            while (retsetMostrados.next()) {
                updateFila = "UPDATE usuario SET ";
                boolean fila_editada = false;
                if (!retsetMostrados.getString("u.nombre").equals(tablaUsuarios.getValueAt(i, 0))) {
                    fila_editada = true;
                    if (tablaUsuarios.getValueAt(i, 0).toString().length() < 45) {
                        updateFila = updateFila + " nombre='" + tablaUsuarios.getValueAt(i, 0) + "', ";
                    } else {
                        updateFila = updateFila + " nombre='" + tablaUsuarios.getValueAt(i, 0).toString().substring(0, 45) + "', ";
                    }
                }
                if (!retsetMostrados.getString("u.primerApellido").equals(tablaUsuarios.getValueAt(i, 1))) {
                    fila_editada = true;
                    if (tablaUsuarios.getValueAt(i, 1).toString().length() < 75) {
                        updateFila = updateFila + " primerApellido='" + tablaUsuarios.getValueAt(i, 1) + "', ";
                    } else {
                        updateFila = updateFila + " primerApellido='" + tablaUsuarios.getValueAt(i, 1).toString().substring(0, 75) + "', ";
                    }
                }
                if (!retsetMostrados.getString("u.segundoApellido").equals(tablaUsuarios.getValueAt(i, 2))) {
                    fila_editada = true;
                    if (tablaUsuarios.getValueAt(i, 2).toString().length() < 45) {
                        updateFila = updateFila + " segundoApellido='" + tablaUsuarios.getValueAt(i, 2) + "', ";
                    } else {
                        updateFila = updateFila + " segundoApellido='" + tablaUsuarios.getValueAt(i, 2).toString().substring(0, 45) + "', ";
                    }
                }
                if (!retsetMostrados.getString("u.dni").equals(tablaUsuarios.getValueAt(i, 3))) {
                    fila_editada = true;
                    if (tablaUsuarios.getValueAt(i, 3).toString().length() < 12) {
                        updateFila = updateFila + " dni='" + tablaUsuarios.getValueAt(i, 3) + "', ";
                    } else {
                        updateFila = updateFila + " dni='" + tablaUsuarios.getValueAt(i, 3).toString().substring(0, 12) + "', ";
                    }
                }
                if (tablaUsuarios.getValueAt(i, 9) != null) {
                    if (retsetMostrados.getString("u.email") != null) {
                        if (!retsetMostrados.getString("u.email").equals(tablaUsuarios.getValueAt(i, 9))) {
                            fila_editada = true;
                            if (tablaUsuarios.getValueAt(i, 9).toString().length() < 45) {
                                updateFila = updateFila + " email='" + tablaUsuarios.getValueAt(i, 9) + "', ";
                            } else {
                                updateFila = updateFila + " email='" + tablaUsuarios.getValueAt(i, 9).toString().substring(0, 45) + "', ";
                            }
                        }
                    } else {
                        fila_editada = true;
                        if (tablaUsuarios.getValueAt(i, 9).toString().length() < 45) {
                            updateFila = updateFila + " email='" + tablaUsuarios.getValueAt(i, 9) + "', ";
                        } else {
                            updateFila = updateFila + " email='" + tablaUsuarios.getValueAt(i, 9).toString().substring(0, 44) + "', ";
                        }
                    }
                } else {
                    if (retsetMostrados.getString("u.email") != null) {
                        fila_editada = true;
                        updateFila = updateFila + " email=null, ";
                    }
                }

                if (tablaUsuarios.getValueAt(i, 4) != null) {
                    if (retsetMostrados.getString("u.clave") != null) {
                        if (!retsetMostrados.getString("u.clave").equals(tablaUsuarios.getValueAt(i, 4))) {
                            fila_editada = true;
                            if (tablaUsuarios.getValueAt(i, 4).toString().length() < 30) {
                                updateFila = updateFila + " clave='" + tablaUsuarios.getValueAt(i, 4) + "', ";
                            } else {
                                updateFila = updateFila + " clave='" + tablaUsuarios.getValueAt(i, 4).toString().substring(0, 30) + "', ";
                            }
                        }
                    } else {
                        fila_editada = true;
                        if (tablaUsuarios.getValueAt(i, 4).toString().length() < 30) {
                            updateFila = updateFila + " clave='" + tablaUsuarios.getValueAt(i, 4) + "', ";
                        } else {
                            updateFila = updateFila + " clave='" + tablaUsuarios.getValueAt(i, 4).toString().substring(0, 30) + "', ";
                        }
                    }
                } else {
                    if (retsetMostrados.getString("u.clave") != null) {
                        fila_editada = true;
                        updateFila = updateFila + " clave=null, ";
                    }
                }
                if (tablaUsuarios.getValueAt(i, 6) != null) {
                    if (retsetMostrados.getString("u.numeroCuenta") != null) {
                        if (!retsetMostrados.getString("u.numeroCuenta").equals(tablaUsuarios.getValueAt(i, 6))) {
                            fila_editada = true;
                            if (tablaUsuarios.getValueAt(i, 6).toString().length() < 45) {
                                updateFila = updateFila + " numeroCuenta='" + tablaUsuarios.getValueAt(i, 6) + "', ";
                            } else {
                                updateFila = updateFila + " numeroCuenta='" + tablaUsuarios.getValueAt(i, 6).toString().substring(0, 45) + "', ";
                            }
                        }
                    } else {
                        fila_editada = true;
                        if (tablaUsuarios.getValueAt(i, 6).toString().length() < 45) {
                            updateFila = updateFila + " numeroCuenta='" + tablaUsuarios.getValueAt(i, 6) + "', ";
                        } else {
                            updateFila = updateFila + " numeroCuenta='" + tablaUsuarios.getValueAt(i, 6).toString().substring(0, 45) + "', ";
                        }
                    }
                } else {
                    if (retsetMostrados.getString("u.numeroCuenta") != null) {
                        fila_editada = true;
                        updateFila = updateFila + " numeroCuenta=null, ";
                    }
                }
                if (tablaUsuarios.getValueAt(i, 7) != null) {
                    if (isInteger((String) tablaUsuarios.getValueAt(i, 7))) {
                        if (retsetMostrados.getString("u.telmovil") != null) {
                            if (!retsetMostrados.getString("u.telmovil").equals(tablaUsuarios.getValueAt(i, 7))) {
                                fila_editada = true;
                                updateFila = updateFila + " telmovil=" + tablaUsuarios.getValueAt(i, 7) + ", ";
                            }
                        } else {
                            fila_editada = true;
                            updateFila = updateFila + " telmovil=" + tablaUsuarios.getValueAt(i, 7) + ", ";
                        }
                    } else {
                        //errorModifMovilUsuario.setVisible(true);
                    }
                } else {
                    if (retsetMostrados.getString("u.telmovil") != null) {
                        fila_editada = true;
                        updateFila = updateFila + " telmovil=null, ";
                    }
                }
                if (tablaUsuarios.getValueAt(i, 8) != null) {
                    if (isInteger((String) tablaUsuarios.getValueAt(i, 8))) {
                        if (retsetMostrados.getString("u.telFijo") != null) {
                            if (!retsetMostrados.getString("u.telFijo").equals(tablaUsuarios.getValueAt(i, 8))) {
                                fila_editada = true;
                                updateFila = updateFila + " telFijo=" + tablaUsuarios.getValueAt(i, 8) + ", ";
                            }
                        } else {
                            fila_editada = true;
                            updateFila = updateFila + " telFijo=" + tablaUsuarios.getValueAt(i, 8) + ", ";
                        }
                    } else {
                        //errorModifFijoUsuario.setVisible(true);
                    }
                } else {
                    if (retsetMostrados.getString("u.telFijo") != null) {
                        fila_editada = true;
                        updateFila = updateFila + " telFijo=null, ";
                    }
                }
                updateFila = updateFila.substring(0, updateFila.length() - 2);
                updateFila = updateFila + " WHERE usuario.idusuario=" + retsetMostrados.getString("u.idUsuario");
                if (fila_editada == true) {
                    GestorUsuarios.actualizaUsuario(accesoBD, updateFila);
                    System.out.print("\nModificado " + i + " act\n " + updateFila);
                }
                i++;
            }
        } catch (SQLException ex) {
            System.out.print(ex.getMessage());
        }
    }//GEN-LAST:event_botonGuardarCambiosUsuarioActionPerformed

    private void deshacerCambiosUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deshacerCambiosUsuarioActionPerformed
        ResultSet estadoActual;
        estadoActual = GestorUsuarios.consultarUsuario(accesoBD, ultimaConsultaUsuario);
        try {
            String updateFila;
            while (estadoActual.next()) {
                ultimaActualizacionUsuario.next();
                updateFila = "UPDATE usuario SET ";
                boolean fila_editada = false;
                if (!ultimaActualizacionUsuario.getString("u.nombre").equals(estadoActual.getString("u.nombre"))) {
                    fila_editada = true;
                    updateFila = updateFila + " nombre='" + ultimaActualizacionUsuario.getString("u.nombre") + "', ";
                }
                if (!ultimaActualizacionUsuario.getString("u.primerApellido").equals(estadoActual.getString("u.primerApellido"))) {
                    fila_editada = true;
                    updateFila = updateFila + " primerApellido='" + ultimaActualizacionUsuario.getString("u.primerApellido") + "', ";
                }
                if (!ultimaActualizacionUsuario.getString("u.segundoApellido").equals(estadoActual.getString("u.segundoApellido"))) {
                    fila_editada = true;
                    updateFila = updateFila + " segundoApellido='" + ultimaActualizacionUsuario.getString("u.segundoApellido") + "', ";
                }
                if (!ultimaActualizacionUsuario.getString("u.dni").equals(estadoActual.getString("u.dni"))) {
                    fila_editada = true;
                    updateFila = updateFila + " dni='" + ultimaActualizacionUsuario.getString("u.dni") + "', ";
                }
                if (ultimaActualizacionUsuario.getString("u.email") != null) { //antes no estaba a null
                    if (estadoActual.getString("u.email") != null) {    //ahora tampoco esta a null
                        if (!ultimaActualizacionUsuario.getString("u.email").equals(estadoActual.getString("u.email"))) {
                            fila_editada = true;
                            updateFila = updateFila + " email='" + ultimaActualizacionUsuario.getString("u.email") + "', ";
                        }
                    } else {                                         //ahora esta a null
                        fila_editada = true;
                        updateFila = updateFila + " email='" + ultimaActualizacionUsuario.getString("u.email") + "', ";
                    }
                } else {                                            //antes estaba a null
                    if (estadoActual.getString("u.email") != null) {    //ahora no esta a null
                        fila_editada = true;
                        updateFila = updateFila + " email=null, ";
                    }
                }
                if (ultimaActualizacionUsuario.getString("u.numerocuenta") != null) { //antes no estaba a null
                    if (estadoActual.getString("u.numerocuenta") != null) {    //ahora tampoco esta a null
                        if (!ultimaActualizacionUsuario.getString("u.numerocuenta").equals(estadoActual.getString("u.numerocuenta"))) {
                            fila_editada = true;
                            updateFila = updateFila + " numerocuenta='" + ultimaActualizacionUsuario.getString("u.numerocuenta") + "', ";
                        }
                    } else {                                         //ahora esta a null
                        fila_editada = true;
                        updateFila = updateFila + " numerocuenta='" + ultimaActualizacionUsuario.getString("u.numerocuenta") + "', ";
                    }
                } else {                                            //antes estaba a null
                    if (estadoActual.getString("u.numerocuenta") != null) {    //ahora no esta a null
                        fila_editada = true;
                        updateFila = updateFila + " numerocuenta=null, ";
                    }
                }
                if (ultimaActualizacionUsuario.getString("u.telmovil") != null) { //antes no estaba a null
                    if (estadoActual.getString("u.telmovil") != null) {    //ahora tampoco esta a null
                        if (!ultimaActualizacionUsuario.getString("u.telmovil").equals(estadoActual.getString("u.telmovil"))) {
                            fila_editada = true;
                            updateFila = updateFila + " telmovil=" + ultimaActualizacionUsuario.getString("u.telmovil") + ", ";
                        }
                    } else {                                         //ahora esta a null
                        fila_editada = true;
                        updateFila = updateFila + " telmovil=" + ultimaActualizacionUsuario.getString("u.telmovil") + ", ";
                    }
                } else {                                            //antes estaba a null
                    if (estadoActual.getString("u.telmovil") != null) {    //ahora no esta a null
                        fila_editada = true;
                        updateFila = updateFila + " telmovil=null, ";
                    }
                }
                if (ultimaActualizacionUsuario.getString("u.telfijo") != null) { //antes no estaba a null
                    if (estadoActual.getString("u.telfijo") != null) {    //ahora tampoco esta a null
                        if (!ultimaActualizacionUsuario.getString("u.telfijo").equals(estadoActual.getString("u.telfijo"))) {
                            fila_editada = true;
                            updateFila = updateFila + " telfijo=" + ultimaActualizacionUsuario.getString("u.telfijo") + ", ";
                        }
                    } else {                                         //ahora esta a null
                        fila_editada = true;
                        updateFila = updateFila + " telfijo=" + ultimaActualizacionUsuario.getString("u.telfijo") + ", ";
                    }
                } else {                                            //antes estaba a null
                    if (estadoActual.getString("u.telfijo") != null) {    //ahora no esta a null
                        fila_editada = true;
                        updateFila = updateFila + " telfijo=null, ";
                    }
                }
                if (ultimaActualizacionUsuario.getString("u.clave") != null) { //antes no estaba a null
                    if (estadoActual.getString("u.clave") != null) {    //ahora tampoco esta a null
                        if (!ultimaActualizacionUsuario.getString("u.clave").equals(estadoActual.getString("u.clave"))) {
                            fila_editada = true;
                            updateFila = updateFila + " clave='" + ultimaActualizacionUsuario.getString("u.clave") + "', ";
                        }
                    } else {                                         //ahora esta a null
                        fila_editada = true;
                        updateFila = updateFila + " clave='" + ultimaActualizacionUsuario.getString("u.clave") + "', ";
                    }
                } else {                                            //antes estaba a null
                    if (estadoActual.getString("u.clave") != null) {    //ahora no esta a null
                        fila_editada = true;
                        updateFila = updateFila + " clave=null, ";
                    }
                }
                updateFila = updateFila.substring(0, updateFila.length() - 2);
                updateFila = updateFila + " WHERE usuario.idusuario=" + ultimaActualizacionUsuario.getString("u.idusuario");
                if (fila_editada == true) {
                    System.out.print("\nVuelta atras  act\n " + updateFila);
                    GestorUsuarios.actualizaUsuario(accesoBD, updateFila);
                }
            }

            boton_mostrar_UsuariosActionPerformed(null);
        } catch (SQLException ex) {
            System.out.print(ex.getMessage());
        }

    }//GEN-LAST:event_deshacerCambiosUsuarioActionPerformed

    private void boton_mostrar_UsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_mostrar_UsuariosActionPerformed
        try {
            String consulta_usuarios = leeConsultaUsuariosInterfaz();
            consultaUsuariosMostrados = consulta_usuarios;
            System.out.print("\nLA consulta " + consulta_usuarios);
            retset = GestorUsuarios.consultarUsuario(accesoBD, consulta_usuarios);
            //retset = accesoBD.ejecutaConsulta(consulta_alumnos);
            tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
                    new String[]{
                "Nombre", "Primer Apellido", "Segundo Apellido", "DNI", "Clave", "Tipo Usuario", "Numero Cuenta", "Tel. Movil", "Tel. Fijo", "Email"
            }) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                };
                boolean[] canEdit = new boolean[]{
                    true, true, true, true, true, false, true, true, true, true
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });
            javax.swing.table.TableModel modelo_tabla = new javax.swing.table.DefaultTableModel();
            modelo_tabla = tablaUsuarios.getModel();
            int i = 0;
            while (retset.next()) {
                if (i < 25) {
                    tablaUsuarios.setValueAt(retset.getString("u.nombre"), i, 0);
                    tablaUsuarios.setValueAt(retset.getString("u.primerApellido"), i, 1);
                    tablaUsuarios.setValueAt(retset.getString("u.segundoApellido"), i, 2);
                    tablaUsuarios.setValueAt(retset.getString("u.dni"), i, 3);
                    tablaUsuarios.setValueAt(retset.getString("u.clave"), i, 4);
                    if (retset.getString("u.entrenador").equals("0")) {
                        tablaUsuarios.setValueAt("Administrador", i, 5);
                    } else {
                        tablaUsuarios.setValueAt("Entrenador", i, 5);
                    }

                    tablaUsuarios.setValueAt(retset.getString("u.numerocuenta"), i, 6);
                    tablaUsuarios.setValueAt(retset.getString("u.telmovil"), i, 7);
                    tablaUsuarios.setValueAt(retset.getString("u.telfijo"), i, 8);
                    tablaUsuarios.setValueAt(retset.getString("u.email"), i, 9);
                } else {
                    javax.swing.table.DefaultTableModel temp = (javax.swing.table.DefaultTableModel) tablaUsuarios.getModel();
                    Object nuevo[] = {"", "", ""};
                    temp.addRow(nuevo);
                    tablaUsuarios.setValueAt(retset.getString("u.nombre"), i, 0);
                    tablaUsuarios.setValueAt(retset.getString("u.primerApellido"), i, 1);
                    tablaUsuarios.setValueAt(retset.getString("u.segundoApellido"), i, 2);
                    tablaUsuarios.setValueAt(retset.getString("u.dni"), i, 3);
                    tablaUsuarios.setValueAt(retset.getString("u.clave"), i, 4);
                    if (retset.getString("u.entrenador").equals("0")) {
                        tablaUsuarios.setValueAt("Administrador", i, 5);
                    } else {
                        tablaUsuarios.setValueAt("Entrenador", i, 5);
                    }
                    tablaUsuarios.setValueAt(retset.getString("u.numerocuenta"), i, 6);
                    tablaUsuarios.setValueAt(retset.getString("u.telmovil"), i, 7);
                    tablaUsuarios.setValueAt(retset.getString("u.telfijo"), i, 8);
                    tablaUsuarios.setValueAt(retset.getString("u.email"), i, 9);
                }
                i++;
            }
        } catch (SQLException ex) {
            System.out.print(ex.getMessage());
        }

    }//GEN-LAST:event_boton_mostrar_UsuariosActionPerformed

    private void botonEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarUsuarioActionPerformed
        int selection = JOptionPane.showConfirmDialog(this, "Desea eliminar el usuario?", "Eliminar usuario", JOptionPane.YES_NO_OPTION);
        if (selection == JOptionPane.YES_OPTION) {

            if (tablaUsuarios.getSelectedRow() == -1) {
                errorEliminarUsuario.setVisible(true);
            } else {
                int posTabla = tablaUsuarios.getSelectedRow();

                try {
                    ResultSet usuariosMostrados = GestorAlumnos.consultarAlumno(accesoBD, consultaUsuariosMostrados);
                    int i = 0;
                    while (i <= posTabla) {
                        usuariosMostrados.next();
                        i++;
                    }

                    GestorUsuarios.eliminaUsuario(accesoBD,
                            usuariosMostrados.getString("u.nombre"), usuariosMostrados.getString("u.primerApellido"), usuariosMostrados.getString("u.segundoApellido"),
                            usuariosMostrados.getString("u.dni"), usuariosMostrados.getString("u.clave"), usuariosMostrados.getBoolean("u.entrenador"),
                            usuariosMostrados.getInt("u.telMovil"), usuariosMostrados.getInt("u.telFijo"), usuariosMostrados.getString("u.email"),
                            usuariosMostrados.getString("u.numeroCuenta"));

                    boton_mostrar_UsuariosActionPerformed(null);
                } catch (SQLException ex) {
                    System.out.print(ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_botonEliminarUsuarioActionPerformed

    private void verEstadisticasEntrenadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verEstadisticasEntrenadorActionPerformed

        String usuarioElegido;
        ResultSet retset = null;

        int i = tablaUsuarios.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un entrenador para ver estadisticas");
        } else {
            String nombre = (String) tablaUsuarios.getValueAt(i, 0);
            String primerApellido = (String) tablaUsuarios.getValueAt(i, 1);
            String segundoApellido = (String) tablaUsuarios.getValueAt(i, 2);
            String DNI = (String) tablaUsuarios.getValueAt(i, 3);

            String tipo = (String) tablaUsuarios.getValueAt(i, 5);

            usuarioElegido = nombre + " " + primerApellido + " " + segundoApellido;

            try {
                retset = GestorUsuarios.consultarEstadisticasEntrenador(accesoBD, nombre, primerApellido, segundoApellido, DNI);
            } catch (SQLException ex) {
                Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (retset == null || !"Entrenador".equals(tipo)) {
                if (!"Entrenador".equals(tipo)) {
                    JOptionPane.showMessageDialog(null, "Este usuario no tiene estadisticas ya que no es entrenador");
                } else {
                    JOptionPane.showMessageDialog(null, "No hay datos que mostrar para el usuario");
                }
            } else {
                new EstadisticasEntrenador(accesoBD, retset, usuarioElegido).setVisible(true);
            }

        }
    }//GEN-LAST:event_verEstadisticasEntrenadorActionPerformed

    private String leeConsultaUsuariosInterfaz() {
        String consulta_usuarios = "select u.idUsuario, u.nombre, u.primerApellido, u.segundoApellido, u.DNI, u.clave, u.entrenador, u.numeroCuenta, u.telMovil, u.telFijo, u.email"
                + " FROM ";
        String tablasImplicadas = " usuario u ";
        String condicionesConsulta = " WHERE ";

        if (!textfield_nombreUsuario.getText().equals("") || !textfield_apellidoPrimeroUsuario.getText().equals("") || !textfield_apellidoSegundoUsuario.getText().equals("")
                || !consultaEntrenadorUsuario.getSelectedItem().equals("") || !consultaEquipoUsuario.getSelectedItem().equals("") || !consultaGrupoUsuario.getSelectedItem().equals("")
                || !consultaCategoriaUsuario.getSelectedItem().equals("") || !consultaTemporadaUsuario.getSelectedItem().equals("")) {
            if (!textfield_nombreUsuario.getText().equals("")) {
                condicionesConsulta = condicionesConsulta + " u.nombre='" + textfield_nombreUsuario.getText() + "' AND ";
            }
            if (!textfield_apellidoPrimeroUsuario.getText().equals("")) {
                condicionesConsulta = condicionesConsulta + " u.primerapellido='" + textfield_apellidoPrimeroUsuario.getText() + "' AND ";
            }
            if (!textfield_apellidoSegundoUsuario.getText().equals("")) {
                condicionesConsulta = condicionesConsulta + " u.segundoapellido='" + textfield_apellidoSegundoUsuario.getText() + "' AND ";
            }
            if (!consultaEntrenadorUsuario.getSelectedItem().equals("")) {
                if (consultaEntrenadorUsuario.getSelectedItem().equals("Entrenador")) {
                    condicionesConsulta = condicionesConsulta + " u.entrenador=" + true + " AND ";
                } else {
                    condicionesConsulta = condicionesConsulta + " u.entrenador=" + false + " AND ";
                }
            }
            if (!consultaGrupoUsuario.getSelectedItem().equals("") || !consultaCategoriaUsuario.getSelectedItem().equals("") || !consultaTemporadaUsuario.getSelectedItem().equals("")) {
                tablasImplicadas = tablasImplicadas + " , grupo ";
                condicionesConsulta = condicionesConsulta + " grupo.usuario_idusuario=u.idusuario AND ";
                if (!consultaGrupoUsuario.getSelectedItem().equals("")) {
                    condicionesConsulta = condicionesConsulta + " grupo.idGrupo=" + consultaGrupoUsuario.getSelectedItem() + " AND ";
                }
                if (!consultaCategoriaUsuario.getSelectedItem().equals("")) {
                    tablasImplicadas = tablasImplicadas + " , categoria ";
                    condicionesConsulta = condicionesConsulta + " grupo.Categoria_idCategoria=categoria.idCategoria AND categoria.tipo='" + consultaCategoriaUsuario.getSelectedItem() + "' AND ";
                }
                if (!consultaTemporadaUsuario.getSelectedItem().equals("")) {
                    tablasImplicadas = tablasImplicadas + " , temporada ";
                    condicionesConsulta = condicionesConsulta + " grupo.Temporada_idTemporada=temporada.idTemporada and temporada.curso='" + consultaTemporadaUsuario.getSelectedItem() + "' AND ";
                }
            }
            if (!consultaEquipoUsuario.getSelectedItem().equals("")) {
                tablasImplicadas = tablasImplicadas + " , rango ";
                condicionesConsulta = condicionesConsulta + " rango.usuario_idusuario=u.idusuario AND rango.equipo_idequipo=" + consultaEquipoUsuario.getSelectedItem() + " AND ";
            }

            condicionesConsulta = condicionesConsulta.substring(0, condicionesConsulta.length() - 4);
            tablasImplicadas = tablasImplicadas + condicionesConsulta;
        }
        consulta_usuarios = consulta_usuarios + tablasImplicadas;

        return consulta_usuarios;
    }

    private boolean isInteger(String cadena) {
        try {
            int num;
            num = Integer.parseInt(cadena);
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEliminarUsuario;
    private javax.swing.JButton botonGuardarCambiosUsuario;
    private javax.swing.JButton botonNuevoUsuario;
    private javax.swing.JButton boton_mostrar_Usuarios;
    private javax.swing.JComboBox consultaCategoriaUsuario;
    private javax.swing.JComboBox consultaEntrenadorUsuario;
    private javax.swing.JComboBox consultaEquipoUsuario;
    private javax.swing.JComboBox consultaGrupoUsuario;
    private javax.swing.JComboBox consultaTemporadaUsuario;
    private javax.swing.JButton deshacerCambiosUsuario;
    private javax.swing.JLabel errorEliminarUsuario;
    private javax.swing.JLabel errorModifFijoUsuario;
    private javax.swing.JLabel errorModifMovilUsuario;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelUsuarios;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField textfield_apellidoPrimeroUsuario;
    private javax.swing.JTextField textfield_apellidoSegundoUsuario;
    private javax.swing.JTextField textfield_nombreUsuario;
    private javax.swing.JButton verEstadisticasEntrenador;
    // End of variables declaration//GEN-END:variables
}
