/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazUsuario;

/**
 *
 * @author Julio
 */
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.UIManager;
 
public class Cronometro extends JPanel implements Runnable, ActionListener 
{ 
    public Cronometro()
    {
        setSize( 300, 200 );
        setLayout( new BorderLayout() );
 
        //Etiqueta donde se colocara el tiempo 
        tiempo = new JLabel( "00:00" );
        tiempo.setFont( new Font( Font.SERIF, Font.BOLD, 50 ) );
        tiempo.setHorizontalAlignment( JLabel.CENTER );
        tiempo.setForeground( Color.BLACK );
        tiempo.setBackground( Color.WHITE );
        tiempo.setOpaque( true );
 
        add( tiempo, BorderLayout.CENTER );
 
        //Boton iniciar
        JButton btnI = new JButton( "Iniciar" );
        btnI.addActionListener( this );
        add( btnI, BorderLayout.WEST);
        
        //Boton parar
        JButton btnP = new JButton( "Parar" );
        btnP.addActionListener( this );
        add( btnP, BorderLayout.EAST );
         
        //this.setLocationRelativeTo( null );
        setVisible( true );
    }
  
    public void run(){
        Integer minutos = 0 , segundos = 0, milesimas = 0;
        //min es minutos, seg es segundos y mil es milesimas de segundo
        String min="", seg="", mil="";
        cronometroActivadoAnt = true;
        try
        {
            //Mientras cronometroActivo sea verdadero entonces seguira
            //aumentando el tiempo
            while( true )
            {
                Thread.sleep( 4 );
                //Incrementamos 4 milesimas de segundo
                milesimas += 4;
                //Cuando llega a 1000 osea 1 segundo aumenta 1 segundo
                //y las milesimas de segundo de nuevo a 0
                if( milesimas == 1000 )
                {
                    milesimas = 0;
                    segundos += 1;
                    //Si los segundos llegan a 60 entonces aumenta 1 los minutos
                    //y los segundos vuelven a 0
                    if( segundos == 60 )
                    {
                        segundos = 0;
                        minutos++;
                    }
                }

                //Esto solamente es estetica para que siempre este en formato
                //00:00
                if( minutos < 10 ) min = "0" + minutos;
                else min = minutos.toString();
                if( segundos < 10 ) seg = "0" + segundos;
                else seg = segundos.toString();

                if( milesimas < 10 ) mil = "00" + milesimas;
                else if( milesimas < 100 ) mil = "0" + milesimas;
                else mil = milesimas.toString();
                //Colocamos en la etiqueta la informacion
                tiempo.setText( min + ":" + seg);                
            }
        }catch(Exception e){}
        //Cuando se reincie se coloca nuevamente en 00:00
        //tiempo.setText( "00:00" );
    }
  
    //Esto es para el boton iniciar y reiniciar
    public void actionPerformed( ActionEvent evt ) {
        Object o = evt.getSource();
        if( o instanceof JButton )
        {
            JButton btn = (JButton)o;
            if( btn.getText().equals("Iniciar") ) iniciarCronometro();
            if( btn.getText().equals("Parar") ) pararCronometro();
        }
    }
  
    //Iniciar el cronometro poniendo cronometroActivo 
    //en verdadero para que entre en el while
    public void iniciarCronometro() {
        if(!cronometroActivadoAnt){      
            hilo = new Thread(this);
            hilo.start();
        } else
            hilo.resume();
    }
  
    //Esto es para parar el cronometro
    public void pararCronometro(){
        hilo.suspend();
    }
  
    public static void main(String[] args) {
        //Esta parte es para look and feel por lo tanto es opcional, solo hay que descomentarla
        //try{
        //    UIManager.setLookAndFeel( new com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel() );
        //}catch( Exception e ){}
        new Cronometro();
    }
  
    JLabel tiempo;
    Thread hilo, aux;
    boolean cronometroActivadoAnt;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
