/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazUsuario;

import GestionDeAlumnos.GestorAlumnos;
import GestionDeEquipos.GestorEquipos;
import ServiciosAlmacenamiento.BaseDatos;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

/**
 *
 * @author David
 */
public class NuevoEquipo extends javax.swing.JFrame {

    private PantallaPrincipal creador;
    List<String> listaAlumnos = new ArrayList<String>();
    List<String> listaAlumnosQuitados = new ArrayList<String>();
    List<Integer> listaIDAlumnosQuitados = new ArrayList<Integer>();
    BaseDatos accesoBD;
    DefaultListModel modeloGuardar = new DefaultListModel(); 
    Border bordeError;

    /**
     * Creates new form NuevoEquipo
     */
    public NuevoEquipo() {
        initComponents();
    }

    public NuevoEquipo(BaseDatos acceso) throws SQLException {

        initComponents();
        this.setLocation(300, 300);
        accesoBD = acceso;
        Error.setVisible(false);
        bordeError = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red);
        PerteneceFundacion.setSelected(false);
        if (comboCat.getSelectedItem().toString().equals("Categoria") && comboTemp.getSelectedItem().toString().equals("Temporada")) {
                try {
                    actualizarCategoria();
                    actualizarTemporada();
                } catch (SQLException ex) {
                    Logger.getLogger(NuevoEquipo.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        comboCat = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        comboTemp = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        textPrimerEnt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textSegundoEnt = new javax.swing.JTextField();
        botonGuardar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        botonAñadir = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        alumnosMostrados = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        alumnosSeleccionados = new javax.swing.JList();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        comboEntrenador = new javax.swing.JComboBox();
        comboEntrenador2 = new javax.swing.JComboBox();
        jSeparator2 = new javax.swing.JSeparator();
        PerteneceFundacion = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        nAlumnosDisponibles = new javax.swing.JLabel();
        nAlumnosSeleccionados = new javax.swing.JLabel();
        Error = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        comSexo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Nuevo equipo");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Categoria:");

        comboCat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Categoria" }));
        comboCat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboCatMouseClicked(evt);
            }
        });
        comboCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCatActionPerformed(evt);
            }
        });

        jLabel4.setText("Temporada:");

        comboTemp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Temporada" }));
        comboTemp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboTempMouseClicked(evt);
            }
        });
        comboTemp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTempItemStateChanged(evt);
            }
        });

        jLabel5.setText("Primer Entrenador:");

        textPrimerEnt.setText("Buscar...");
        textPrimerEnt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textPrimerEntMouseClicked(evt);
            }
        });
        textPrimerEnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPrimerEntActionPerformed(evt);
            }
        });

        jLabel6.setText("Segundo Entrenador:");

        textSegundoEnt.setText("Buscar...");
        textSegundoEnt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textSegundoEntMouseClicked(evt);
            }
        });
        textSegundoEnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSegundoEntActionPerformed(evt);
            }
        });

        botonGuardar.setText("Guardar");
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        jLabel7.setText("Alumnos");

        jTextField1.setText("Buscar...");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        botonAñadir.setText("Añadir");
        botonAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAñadirActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(alumnosMostrados);

        jButton1.setText("Quitar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        alumnosSeleccionados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(alumnosSeleccionados);

        jLabel8.setText("Alumnos seleccionados:");

        comboEntrenador.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Entrenador-" }));
        comboEntrenador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboEntrenadorMouseClicked(evt);
            }
        });
        comboEntrenador.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboEntrenadorItemStateChanged(evt);
            }
        });
        comboEntrenador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEntrenadorActionPerformed(evt);
            }
        });

        comboEntrenador2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Entrenador-" }));

        PerteneceFundacion.setText("Fundacion");
        PerteneceFundacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PerteneceFundacionMouseClicked(evt);
            }
        });
        PerteneceFundacion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PerteneceFundacionStateChanged(evt);
            }
        });
        PerteneceFundacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PerteneceFundacionActionPerformed(evt);
            }
        });

        jLabel10.setText("Alumnos Disponibles: ");

        nAlumnosDisponibles.setText("0");

        nAlumnosSeleccionados.setText("0");

        Error.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Error.setForeground(new java.awt.Color(204, 0, 0));
        Error.setText("Equipo completo");

        jLabel11.setText("Sexo:");

        comSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "femenino" }));
        comSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comSexoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(botonGuardar)
                                .addGap(18, 18, 18)
                                .addComponent(botonCancelar))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel10)
                                                        .addGap(1, 1, 1)
                                                        .addComponent(nAlumnosDisponibles))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(botonAñadir)
                                                            .addComponent(jButton1))))))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel9))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(nAlumnosSeleccionados))))
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Error)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboCat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(29, 29, 29)
                                        .addComponent(textPrimerEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(comboEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(textSegundoEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(comboEntrenador2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(PerteneceFundacion)
                                .addGap(61, 61, 61)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(comboTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(comSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(textPrimerEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(textSegundoEnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboEntrenador2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(Error)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(nAlumnosSeleccionados))
                                .addGap(9, 9, 9)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(botonGuardar)
                                        .addComponent(botonCancelar))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel10)
                                        .addComponent(nAlumnosDisponibles))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonAñadir)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(PerteneceFundacion)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textSegundoEntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSegundoEntActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSegundoEntActionPerformed

    private void textPrimerEntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPrimerEntActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPrimerEntActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed

        String errores = "";
        String sexo;
        
        if (comSexo.getSelectedItem().toString().equals("Masculino"))
            sexo = "V";
        else
            sexo = "H";
             
        if (textNombre.getText().isEmpty()){
            errores = errores + "Campo \"Nombre\" vacio\n";
            textNombre.setBorder(bordeError);
        }else if(textNombre.getText().length() > 140){
            errores = errores + "Campo \"Nombre\" supera el límite\n";
            textNombre.setBorder(bordeError);
        }
        
        if(PerteneceFundacion.isSelected()){
        
        try{
            modeloGuardar = (DefaultListModel) alumnosSeleccionados.getModel();
        }catch (NullPointerException ex){
          errores = errores + "No hay jugadores suficientes\n";  
        }
            
            
            
            if(comboEntrenador2.getSelectedItem().toString().isEmpty()){
                errores = errores + "Segundo entrenador no seleccionado\n";
            }
            if(comboEntrenador.getSelectedItem().toString().isEmpty()){
                errores = errores + "Primer entrenador no seleccionado\n";
            }
            if(Integer.parseInt(nAlumnosSeleccionados.getText()) < 8){
                errores = errores + "No se ha seleccionado el mínimo de jugadores\n";
                alumnosSeleccionados.setBorder(bordeError);
            }
        }
        
        if(errores.isEmpty()){
        
        try {
            GestorEquipos.InsertarDatosEquipo(accesoBD, textNombre.getText(), comboTemp.getSelectedItem().toString(),
                    comboCat.getSelectedItem().toString(), comboEntrenador.getSelectedItem().toString(), comboEntrenador2.getSelectedItem().toString(), PerteneceFundacion.isSelected(),sexo);
            GestorEquipos.InsertarJugadoresEquipo(accesoBD, modeloGuardar,comboCat.getSelectedItem().toString(),textNombre.getText());
        } catch (SQLException ex) {
            Logger.getLogger(NuevoEquipo.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.setVisible(false);
        
        }else{
            JOptionPane.showMessageDialog(null,
                    errores.substring(0, errores.length() - 1),
                    "Errores en el formulario", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void textPrimerEntMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textPrimerEntMouseClicked
        textPrimerEnt.setText("");
        textPrimerEnt.requestFocus();
    }//GEN-LAST:event_textPrimerEntMouseClicked

    private void textSegundoEntMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textSegundoEntMouseClicked
        textSegundoEnt.setText("");
        textSegundoEnt.requestFocus();
    }//GEN-LAST:event_textSegundoEntMouseClicked

    private void botonAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAñadirActionPerformed
        // TODO add your handling code here:
        List<String> ListaAlumnosSelec = new ArrayList<String>();
        ListaAlumnosSelec.addAll(alumnosMostrados.getSelectedValuesList());
        DefaultListModel modelo=  new DefaultListModel();
              
        
        for(int i = 0; i < ListaAlumnosSelec.size(); i++){
            modelo.addElement(ListaAlumnosSelec.get(i));
        }
                
        alumnosSeleccionados.setModel(modelo);
        nAlumnosSeleccionados.setText(Integer.toString(ListaAlumnosSelec.size()));
        ActualizarJlist(ListaAlumnosSelec);
        
        if(Integer.parseInt(nAlumnosSeleccionados.getText()) > 12){
            Error.setVisible(true);
        }
    }//GEN-LAST:event_botonAñadirActionPerformed
/*
    private void comboEntrenadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEntrenadorActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_comboEntrenadorActionPerformed
*/
    private void PerteneceFundacionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PerteneceFundacionStateChanged
    }//GEN-LAST:event_PerteneceFundacionStateChanged

    private void PerteneceFundacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PerteneceFundacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PerteneceFundacionActionPerformed
    private void comboEntrenadorActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void comboTempItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTempItemStateChanged
        // TODO add your handling code here:
        /*DefaultListModel model = new DefaultListModel();
         alumnosMostrados.setModel(model);
         MostrarAlumnos();*/
    }//GEN-LAST:event_comboTempItemStateChanged

    private void comboEntrenadorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboEntrenadorItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_comboEntrenadorItemStateChanged

    private void comboEntrenadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboEntrenadorMouseClicked
        // TODO add your handling code here:
        ActualizarCombo2Entrenador(comboEntrenador.getSelectedItem().toString());
    }//GEN-LAST:event_comboEntrenadorMouseClicked

    private void PerteneceFundacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PerteneceFundacionMouseClicked
        // TODO add your handling code here:

        if (PerteneceFundacion.isSelected() == true) {
            try {
                ActualizarPrimerEntrenador();
                textPrimerEnt.setEditable(true);
                textSegundoEnt.setEditable(true);
                jTextField1.setEditable(true);
                actualizarCategoria();
                actualizarTemporada();

            } catch (SQLException ex) {
                Logger.getLogger(NuevoEquipo.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        if (PerteneceFundacion.isSelected() == false) {
            textPrimerEnt.setEditable(false);
            textSegundoEnt.setEditable(false);
            jTextField1.setEditable(false);
            comboEntrenador.removeAllItems();
            comboEntrenador.addItem("-Entrenador-");
            comboEntrenador2.removeAllItems();
            comboEntrenador2.addItem("-Entrenador-");
            DefaultListModel model = new DefaultListModel();
            alumnosMostrados.setModel(model);
            if (comboCat.getSelectedItem().toString().equals("Categoria") && comboTemp.getSelectedItem().toString().equals("Temporada")) {
                try {
                    actualizarCategoria();
                    actualizarTemporada();
                } catch (SQLException ex) {
                    Logger.getLogger(NuevoEquipo.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        }
    }//GEN-LAST:event_PerteneceFundacionMouseClicked

    private void comboCatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboCatMouseClicked
        // TODO add your handling code here:
        if (PerteneceFundacion.isSelected()) {
            DefaultListModel model = new DefaultListModel();
            alumnosMostrados.setModel(model);
            MostrarAlumnos();
        }
    }//GEN-LAST:event_comboCatMouseClicked

    private void comboCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCatActionPerformed
    }//GEN-LAST:event_comboCatActionPerformed

    private void comboTempMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboTempMouseClicked
        // TODO add your handling code here:
        if (PerteneceFundacion.isSelected()) {
            DefaultListModel model = new DefaultListModel();
            alumnosMostrados.setModel(model);
            MostrarAlumnos();
        }
    }//GEN-LAST:event_comboTempMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultListModel modelo = new DefaultListModel();
        DefaultListModel ModeloAlumnos = new DefaultListModel();
        List<Integer> listaseleccionados = new ArrayList<Integer>();
        List<Integer> listaNOseleccionados = new ArrayList<Integer>();

        modelo = (DefaultListModel) alumnosMostrados.getModel();
        ModeloAlumnos = (DefaultListModel) alumnosSeleccionados.getModel();

        modelo.addElement(alumnosSeleccionados.getSelectedValue());

        ModeloAlumnos.remove(alumnosSeleccionados.getSelectedIndex());


        alumnosMostrados.setModel(modelo);
        alumnosSeleccionados.setModel(ModeloAlumnos);

        System.out.print("\nModelo alumnos " + modelo);

        nAlumnosDisponibles.setText(Integer.toString(modelo.size()));
        nAlumnosSeleccionados.setText(Integer.toString(ModeloAlumnos.size()));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comSexoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comSexoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Error;
    private javax.swing.JCheckBox PerteneceFundacion;
    private javax.swing.JList alumnosMostrados;
    private javax.swing.JList alumnosSeleccionados;
    private javax.swing.JButton botonAñadir;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JComboBox comSexo;
    private javax.swing.JComboBox comboCat;
    private javax.swing.JComboBox comboEntrenador;
    private javax.swing.JComboBox comboEntrenador2;
    private javax.swing.JComboBox comboTemp;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel nAlumnosDisponibles;
    private javax.swing.JLabel nAlumnosSeleccionados;
    private javax.swing.JTextField textNombre;
    private javax.swing.JTextField textPrimerEnt;
    private javax.swing.JTextField textSegundoEnt;
    // End of variables declaration//GEN-END:variables

    private void MostrarAlumnos() {

        List<Integer> listaIDAlumnos = new ArrayList<Integer>();
        List<String> listaNombreAlumnos = new ArrayList<String>();
        int idCategoria = getIDCategoria();
        int idTemporada = getIDTemporada();
        DefaultListModel modelo = new DefaultListModel();
        ResultSet ret, retset;
        String consulta = "SELECT Alumno_idAlumno FROM alumnogrupo WHERE "
                + "Grupo_idGrupo IN (SELECT idGrupo FROM grupo) AND "
                + "Grupo_Categoria_idCategoria = " + idCategoria
                + " AND Grupo_Usuario_idUsuario IN (SELECT idUsuario FROM usuario) AND"
                + " Grupo_Temporada_idTemporada = " + idTemporada;

        System.out.print(
                "\n\nConsulta alumnos equipo " + consulta + "\n");
        ret = accesoBD.ejecutaConsulta(consulta);


        try {
            while (ret.next()) {
                listaIDAlumnos.add(ret.getInt(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(NuevoEquipo.class.getName()).log(Level.SEVERE, null, ex);
        }


        try {
            listaNombreAlumnos = GestorAlumnos.getNombreAl(accesoBD, listaIDAlumnos);
        } catch (SQLException ex) {
            Logger.getLogger(NuevoEquipo.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0;
                i
                < listaNombreAlumnos.size();
                i++) {
            modelo.addElement(listaNombreAlumnos.get(i));
        }

        alumnosMostrados.validate();

        alumnosMostrados.setModel(modelo);

        nAlumnosDisponibles.setText(Integer.toString(listaNombreAlumnos.size()));

    }

    private int getIDCategoria() {

        String consulta = "SELECT idCategoria FROM categoria WHERE"
                + " tipo ='" + comboCat.getSelectedItem().toString() + "'";
        int id = 0;
        ResultSet ret = accesoBD.ejecutaConsulta(consulta);

        System.out.print("\n\nConsulta categoria" + consulta + "\n");
        try {
            if (ret.next()) {
                id = ret.getInt(1);


            }
        } catch (SQLException ex) {
            Logger.getLogger(NuevoEquipo.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        return id;
    }

    private int getIDTemporada() {
        String consulta = "SELECT idTemporada FROM temporada WHERE "
                + "curso ='" + comboTemp.getSelectedItem().toString() + "'";
        int id = 0;
        ResultSet ret = accesoBD.ejecutaConsulta(consulta);

        System.out.print("\n\nConsulta categoria" + consulta + "\n");
        try {
            if (ret.next()) {
                id = ret.getInt(1);


            }
        } catch (SQLException ex) {
            Logger.getLogger(NuevoEquipo.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        return id;
    }

    private void actualizarTemporada() throws SQLException {
        comboTemp.removeAllItems();
        String consulta = "SELECT curso FROM temporada";
        ResultSet retset = accesoBD.ejecutaConsulta(consulta);

        while (retset.next()) {
            comboTemp.addItem(retset.getString(1));
        }
    }

    private void actualizarCategoria() throws SQLException {
        comboCat.removeAllItems();
        String consulta = "SELECT tipo FROM categoria";
        ResultSet retset = accesoBD.ejecutaConsulta(consulta);


        while (retset.next()) {
            comboCat.addItem(retset.getString(1));
        }
    }

    private void ActualizarPrimerEntrenador() throws SQLException {
        comboEntrenador.removeAllItems();
        String consulta = "SELECT primerApellido, segundoApellido, nombre FROM usuario WHERE entrenador = 1";
        ResultSet retset = accesoBD.ejecutaConsulta(consulta);

        while (retset.next()) {
            comboEntrenador.addItem(retset.getString(1) + " " + retset.getString(2) + " "
                    + retset.getString(3));
        }
    }

    private void ActualizarCombo2Entrenador(String name) {
        String entrenador = name;
        comboEntrenador2.removeAllItems();
        String aux, pApellido, sApellido, nombre;

        pApellido = entrenador.substring(0, entrenador.indexOf(" "));
        aux = entrenador.substring(entrenador.indexOf(" ") + 1, entrenador.length());
        sApellido = aux.substring(0, aux.indexOf(" "));
        nombre = aux.substring(aux.indexOf(" ") + 1, aux.length());

        String consulta = "SELECT primerApellido, segundoApellido, nombre FROM usuario"
                + " WHERE idUsuario NOT IN (SELECT idUsuario FROM usuario WHERE"
                + " nombre ='" + nombre + "' AND primerApellido ='" + pApellido
                + "' AND segundoApellido ='" + sApellido + "')";

        System.out.print("\n\nConsulta 2º entrenador\n" + consulta);

        ResultSet retset = accesoBD.ejecutaConsulta(consulta);
        try {
            while (retset.next()) {
                comboEntrenador2.addItem(retset.getString(1) + " " + retset.getString(2) + " "
                        + retset.getString(3));


            }
        } catch (SQLException ex) {
            Logger.getLogger(NuevoEquipo.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ActualizarJlist(List<String> ListaAlumnos) {
        int idCategoria = getIDCategoria();
        int idTemporada = getIDTemporada();
        String idAlu = "";
        DefaultListModel modelo1 = new DefaultListModel();
        alumnosMostrados.setModel(modelo1);
        List<Integer> ListaIDAlumnosMostrados = new ArrayList<Integer>();
        List<Integer> ListaIDAlumnosRestantes = new ArrayList<Integer>();
        List<String> ListaAlumnosRestantes = new ArrayList<String>();
        ResultSet ret;
        int j = 0;
        try {
            ListaIDAlumnosMostrados = GestorAlumnos.getIdAl(accesoBD, ListaAlumnos);


        } catch (SQLException ex) {
            Logger.getLogger(NuevoEquipo.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < ListaIDAlumnosMostrados.size(); i++) {
            idAlu = idAlu + Integer.toString(ListaIDAlumnosMostrados.get(i)) + ",";
        }
        idAlu = idAlu.substring(0, idAlu.length() - 1);
        String Consulta = "SELECT Alumno_idAlumno FROM alumnogrupo WHERE "
                + "Grupo_idGrupo IN (SELECT idGrupo FROM grupo) AND "
                + "Grupo_Categoria_idCategoria = " + idCategoria
                + " AND Grupo_Temporada_idTemporada = " + idTemporada
                + " AND Alumno_idAlumno NOT IN ("
                + idAlu + ")";

        System.out.println("Ola k ase " + Consulta);
        ret = accesoBD.ejecutaConsulta(Consulta);
        try {
            while (ret.next()) {
                ListaIDAlumnosRestantes.add(j, ret.getInt(1));
                j++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(NuevoEquipo.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            ListaAlumnosRestantes = GestorAlumnos.getNombreAl(accesoBD, ListaIDAlumnosRestantes);
        } catch (SQLException ex) {
            Logger.getLogger(NuevoEquipo.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < ListaIDAlumnosRestantes.size(); i++) {
            modelo1.addElement(ListaAlumnosRestantes.get(i) + "\n");
        }

        alumnosMostrados.setModel(modelo1);
        nAlumnosDisponibles.setText(Integer.toString(ListaIDAlumnosRestantes.size()));
    }
}